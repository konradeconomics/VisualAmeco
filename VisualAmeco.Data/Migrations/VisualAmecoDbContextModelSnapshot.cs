// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VisualAmeco.Data.Contexts;

#nullable disable

namespace VisualAmeco.Data.Migrations
{
    [DbContext(typeof(VisualAmecoDbContext))]
    partial class VisualAmecoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VisualAmeco.Core.Entities.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("VisualAmeco.Core.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("VisualAmeco.Core.Entities.Subchapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChapterId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId", "Name")
                        .IsUnique();

                    b.ToTable("Subchapters");
                });

            modelBuilder.Entity("VisualAmeco.Core.Entities.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsMonthly")
                        .HasColumnType("boolean");

                    b.Property<int?>("Month")
                        .HasColumnType("integer");

                    b.Property<int>("VariableId")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("VariableId", "CountryId", "Year", "Month")
                        .IsUnique();

                    b.ToTable("Values");
                });

            modelBuilder.Entity("VisualAmeco.Core.Entities.Variable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Agg")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Ref")
                        .HasColumnType("integer");

                    b.Property<int>("SubChapterId")
                        .HasColumnType("integer");

                    b.Property<int>("Trn")
                        .HasColumnType("integer");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.Property<int>("UnitCode")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("SubChapterId");

                    b.ToTable("Variables");
                });

            modelBuilder.Entity("VisualAmeco.Core.Entities.Subchapter", b =>
                {
                    b.HasOne("VisualAmeco.Core.Entities.Chapter", "Chapter")
                        .WithMany("Subchapters")
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chapter");
                });

            modelBuilder.Entity("VisualAmeco.Core.Entities.Value", b =>
                {
                    b.HasOne("VisualAmeco.Core.Entities.Country", "Country")
                        .WithMany("Values")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VisualAmeco.Core.Entities.Variable", "Variable")
                        .WithMany("Values")
                        .HasForeignKey("VariableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Variable");
                });

            modelBuilder.Entity("VisualAmeco.Core.Entities.Variable", b =>
                {
                    b.HasOne("VisualAmeco.Core.Entities.Subchapter", "SubChapter")
                        .WithMany("Variables")
                        .HasForeignKey("SubChapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubChapter");
                });

            modelBuilder.Entity("VisualAmeco.Core.Entities.Chapter", b =>
                {
                    b.Navigation("Subchapters");
                });

            modelBuilder.Entity("VisualAmeco.Core.Entities.Country", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("VisualAmeco.Core.Entities.Subchapter", b =>
                {
                    b.Navigation("Variables");
                });

            modelBuilder.Entity("VisualAmeco.Core.Entities.Variable", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
